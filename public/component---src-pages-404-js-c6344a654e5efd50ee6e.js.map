{"version":3,"file":"component---src-pages-404-js-c6344a654e5efd50ee6e.js","mappings":"mJAWA,IARA,SAAeA,GAAgB,IAAf,SAAEC,GAAUD,EAC1B,OACEE,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,YAAOD,GAGb,C,4CCmCC,IAlCA,SAAYD,GAAoC,IAADG,EAAAC,EAAA,IAAlC,YAAEC,EAAW,MAAEC,EAAK,SAAEL,GAAUD,EAC3C,MAAM,KAAEO,IAASC,EAAAA,EAAAA,gBAAe,YAc1BC,EAAkBJ,GAAeE,EAAKG,aAAaL,YACnDM,EAAgC,QAApBR,EAAGI,EAAKG,oBAAY,IAAAP,OAAA,EAAjBA,EAAmBG,MAExC,OACEJ,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQS,EAAe,GAAGL,OAAWK,IAAiBL,GACtDJ,EAAAA,cAAA,QAAMU,KAAK,cAAcC,QAASJ,IAClCP,EAAAA,cAAA,QAAMY,SAAS,WAAWD,QAASP,IACnCJ,EAAAA,cAAA,QAAMY,SAAS,iBAAiBD,QAASJ,IACzCP,EAAAA,cAAA,QAAMY,SAAS,UAAUD,QAAQ,YACjCX,EAAAA,cAAA,QAAMU,KAAK,eAAeC,QAAQ,YAClCX,EAAAA,cAAA,QAAMU,KAAK,kBAAkBC,SAA0B,QAAjBT,EAAAG,EAAKG,oBAAY,IAAAN,OAAA,EAAjBA,EAAmBW,SAAU,KACnEb,EAAAA,cAAA,QAAMU,KAAK,gBAAgBC,QAASP,IACpCJ,EAAAA,cAAA,QAAMU,KAAK,sBAAsBC,QAASJ,IACzCR,EAGP,C,6DC5BD,UAVA,WACE,OACEC,EAAAA,cAACc,EAAAA,EAAM,KACLd,EAAAA,cAACe,EAAAA,EAAG,CAACX,MAAM,mBACXJ,EAAAA,cAAA,UAAI,kBACJA,EAAAA,cAAA,SAAG,2DAGT,C","sources":["webpack://gatsby-starter-default/./src/components/layout/layout.js","webpack://gatsby-starter-default/./src/components/layout/seo.js","webpack://gatsby-starter-default/./src/pages/404.js"],"sourcesContent":["import React from \"react\"\nimport \"./layout.css\"\n\nfunction Layout({ children }) {\n  return (\n    <>\n      <main>{children}</main>\n    </>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\n import * as React from \"react\"\n import { useStaticQuery, graphql } from \"gatsby\"\n \n function Seo({ description, title, children }) {\n   const { site } = useStaticQuery(\n     graphql`\n       query {\n         site {\n           siteMetadata {\n             title\n             description\n             author\n           }\n         }\n       }\n     `\n   )\n \n   const metaDescription = description || site.siteMetadata.description\n   const defaultTitle = site.siteMetadata?.title\n \n   return (\n     <>\n       <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n       <meta name=\"description\" content={metaDescription} />\n       <meta property=\"og:title\" content={title} />\n       <meta property=\"og:description\" content={metaDescription} />\n       <meta property=\"og:type\" content=\"website\" />\n       <meta name=\"twitter:card\" content=\"summary\" />\n       <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n       <meta name=\"twitter:title\" content={title} />\n       <meta name=\"twitter:description\" content={metaDescription} />\n       {children}\n     </>\n   )\n }\n \n export default Seo\n ","import React from \"react\"\nimport Layout from \"../components/layout/layout\"\nimport Seo from \"../components/layout/seo\"\n\nfunction NotFoundPage() {\n  return (\n    <Layout>\n      <Seo title=\"404: Not found\" />\n      <h1>404: Not Found</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Layout>\n  )\n}\n\nexport default NotFoundPage\n"],"names":["_ref","children","React","_site$siteMetadata","_site$siteMetadata2","description","title","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","author","Layout","Seo"],"sourceRoot":""}