{"version":3,"file":"component---src-pages-page-4-js-cc6b595d33f344365af9.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/Boton.js","webpack://gatsby-starter-default/./src/components/transferFrenky.js","webpack://gatsby-starter-default/./src/components/propiedadesFrenky.js","webpack://gatsby-starter-default/./src/components/transPropsFrenky.js","webpack://gatsby-starter-default/./src/pages/page-4.js"],"sourcesContent":["// components/Boton.js\nimport React from \"react\"\nimport styled from \"styled-components\";\n\nconst Boton = ({ onClick, mostrarPropiedades }) => {\n  return (\n    <BotonEstilizado onClick={onClick}>\n      {mostrarPropiedades ? \"Transferencias\" : \"Propiedades\"}\n    </BotonEstilizado>\n  );\n};\n\nconst BotonEstilizado = styled.button`\n  background-color: rgba(0, 76, 153);\n  color: #fff;\n  padding: 10px 20px;\n  border: 1px solid black;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 26px;\n  margin: 20px;\n`;\n\nexport default Boton;","import app from \"../pages/firebase\"\nimport {\n  collection,\n  onSnapshot,\n  increment,\n  getDocs,\n  doc,\n  getDoc,\n  updateDoc,\n  arrayUnion,\n} from \"firebase/firestore\"\nimport React, { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport Button from \"react-bootstrap/Button\"\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport Form from \"react-bootstrap/Form\"\nimport InputGroup from \"react-bootstrap/InputGroup\"\n\nconst obtenerJugadores = async () => {\n  try {\n    const jugadoresRef = collection(app, \"jugadores\")\n    const jugadoresDocs = await getDocs(jugadoresRef)\n    const jugadoresData = jugadoresDocs.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data(),\n    }))\n    return jugadoresData\n  } catch (error) {\n    console.error(\"Error al obtener jugadores:\", error)\n  }\n}\n\nconst actualizarSaldoJugador = async (jugadorId, cantidad) => {\n  try {\n    const jugadorRef = doc(app, \"jugadores\", jugadorId)\n    await updateDoc(jugadorRef, {\n      saldo: increment(cantidad),\n    })\n    console.log(`Saldo del jugador ${jugadorId} actualizado con éxito`)\n  } catch (error) {\n    console.error(`Error al actualizar saldo del jugador ${jugadorId}:`, error)\n  }\n}\n\nconst TransferFrenky = () => {\n  const [jugadores, setJugadores] = useState([])\n  const [cantidad, setCantidad] = useState(0)\n  const [historial, setHistorial] = useState([])\n  const [saldoJugador1, setSaldoJugador1] = useState(0)\n  const [saldoJugador2, setSaldoJugador2] = useState(0)\n  const [saldoJugador3, setSaldoJugador3] = useState(0)\n  const [saldoJugador4, setSaldoJugador4] = useState(0)\n  const [concepto, setConcepto] = useState(\"\")\n  const [transacciones, setTransacciones] = useState([])\n\n  const resetInputs = () => {\n    setCantidad(0)\n    setConcepto(\"\")\n  }\n\n  useEffect(() => {\n    obtenerJugadores().then(data => {\n      setJugadores(data)\n      data.forEach(jugador => {\n        if (jugador.id === \"Jugador1\") {\n          setSaldoJugador1(jugador.saldo)\n        } else if (jugador.id === \"Jugador2\") {\n          setSaldoJugador2(jugador.saldo)\n        } else if (jugador.id === \"Jugador3\") {\n          setSaldoJugador3(jugador.saldo)\n        } else if (jugador.id === \"Jugador4\") {\n          setSaldoJugador4(jugador.saldo)\n        }\n      })\n    })\n\n    obtenerTransacciones().then(transacciones => {\n      setHistorial(transacciones)\n    })\n\n    const jugador1Ref = doc(app, \"jugadores\", \"Jugador1\")\n    onSnapshot(jugador1Ref, doc => {\n      if (doc.data() && doc.data().saldo) {\n        setSaldoJugador1(doc.data().saldo)\n      }\n    })\n\n    const jugador2Ref = doc(app, \"jugadores\", \"Jugador2\")\n    onSnapshot(jugador2Ref, doc => {\n      if (doc.data() && doc.data().saldo) {\n        setSaldoJugador2(doc.data().saldo)\n      }\n    })\n\n    const jugador3Ref = doc(app, \"jugadores\", \"Jugador3\")\n    onSnapshot(jugador3Ref, doc => {\n      if (doc.data() && doc.data().saldo) {\n        setSaldoJugador3(doc.data().saldo)\n      }\n    })\n\n    const jugador4Ref = doc(app, \"jugadores\", \"Jugador4\")\n    onSnapshot(jugador4Ref, doc => {\n      if (doc.data() && doc.data().saldo) {\n        setSaldoJugador4(doc.data().saldo)\n      }\n    })\n  }, [])\n\n  const agregarTransaccion = async (jugador, destinatario, cantidad) => {\n    try {\n      console.log(\"agregarTransaccion: inicio\")\n      const historialRef = doc(app, \"jugadores\", \"historial\")\n      console.log(\"agregarTransaccion: historialRef creado\")\n      const nuevaTransaccion = {\n        jugador,\n        destinatario,\n        cantidad,\n        concepto,\n        timestamp: new Date().toISOString(),\n      }\n      console.log(\n        \"agregarTransaccion: nuevaTransaccion creada\",\n        nuevaTransaccion\n      )\n      await updateDoc(historialRef, {\n        transacciones: arrayUnion(nuevaTransaccion),\n      })\n      console.log(\"agregarTransaccion: transacción agregada\")\n    } catch (error) {\n      console.error(\"Error al agregar transacción:\", error)\n    }\n  }\n\n  const obtenerTransacciones = async () => {\n    try {\n      const historialRef = doc(app, \"jugadores\", \"historial\")\n      const historialDoc = await getDoc(historialRef)\n      const transacciones = historialDoc.data().transacciones\n        ? historialDoc\n            .data()\n            .transacciones.filter(\n              transaccion =>\n                transaccion.jugador === \"Frenky\" && transaccion.cantidad !== 0\n            )\n        : []\n      return transacciones\n    } catch (error) {\n      console.error(\"Error al obtener transacciones:\", error)\n    }\n  }\n\n  const handleActualizarSaldo = (jugadorId, nombreJugador) => {\n    console.log(\"handleActualizarSaldo: inicio\")\n    // Primero, restamos la cantidad a Emilio\n    actualizarSaldoJugador(\"Jugador3\", -cantidad).then(() => {\n      console.log(\"handleActualizarSaldo: saldo de Emilio actualizado\")\n      // Luego, sumamos la cantidad al jugador seleccionado\n      actualizarSaldoJugador(jugadorId, cantidad).then(() => {\n        console.log(\n          \"handleActualizarSaldo: saldo del jugador seleccionado actualizado\"\n        )\n        agregarTransaccion(\"Frenky\", nombreJugador, cantidad).then(() => {\n          console.log(\"handleActualizarSaldo: transacción agregada\")\n          setHistorial([\n            ...historial,\n            {\n              jugador: \"Frenky\",\n              destinatario: nombreJugador || \"Banco\",\n              cantidad: cantidad,\n              concepto,\n              timestamp: new Date().toLocaleString(),\n            },\n          ])\n          resetInputs()\n        })\n      })\n    })\n  }\n\n  const handleCantidadChange = event => {\n    setCantidad(parseInt(event.target.value))\n  }\n  const handleConceptoChange = e => {\n    setConcepto(e.target.value)\n  }\n\n  const handleBanco = () => {\n    console.log(\"handleBanco: inicio\")\n    actualizarSaldoJugador(\"Jugador3\", -cantidad).then(() => {\n      console.log(\"handleBanco: saldo actualizado\")\n      agregarTransaccion(\"Frenky\", \"Banco\", -cantidad).then(() => {\n        console.log(\"handleBanco: transacción agregada\")\n        setHistorial([\n          ...historial,\n          {\n            jugador: \"Frenky\",\n            destinatario: \"Banco\",\n            cantidad: -cantidad,\n            concepto,\n            timestamp: new Date().toLocaleString(),\n          },\n        ])\n      })\n    })\n  }\n\n  return (\n    <Container>\n      <Titulo>Transferir Fondos</Titulo>\n      <InputGroup className=\"mb-3\">\n        <InputGroup.Text>$</InputGroup.Text>\n        <Form.Control\n          type=\"number\"\n          value={cantidad.toString()}\n          onChange={handleCantidadChange}\n          aria-label=\"Amount (to the nearest dollar)\"\n        />\n        <InputGroup.Text>.00</InputGroup.Text>\n      </InputGroup>\n      <InputGroup className=\"mb-3\">\n        <InputGroup.Text>Concepto:</InputGroup.Text>\n        <Form.Control\n          type=\"text\"\n          value={concepto}\n          onChange={handleConceptoChange}\n        />\n      </InputGroup>\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        <Boton variant=\"success\" onClick={handleBanco}>\n          <span>Banco</span>\n        </Boton>\n        <Boton\n          variant=\"success\"\n          onClick={() => handleActualizarSaldo(\"Jugador1\", \"Emilio\")}\n        >\n          Emilio\n          <br />\n          <p>{saldoJugador1}</p>\n        </Boton>\n        <Boton\n          variant=\"success\"\n          onClick={() => handleActualizarSaldo(\"Jugador2\", \"Nicole\")}\n        >\n          Nicole\n          <br />\n          <p>{saldoJugador2}</p>\n        </Boton>\n        <Boton\n          variant=\"success\"\n          onClick={() => handleActualizarSaldo(\"Jugador4\", \"Perla\")}\n        >\n          Perla<p>{saldoJugador4}</p>\n        </Boton>\n      </div>\n\n      <h2>Historial de transacciones</h2>\n      <ul>\n        {historial &&\n          historial\n            .sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp))\n            .slice(0, 5)\n            .map((transaccion, index) => (\n              <li key={index}>\n                {new Date(transaccion.timestamp).toLocaleTimeString(\"es-ES\", {\n                  hour: \"2-digit\",\n                  minute: \"2-digit\",\n                })}{\" \"}\n                - {transaccion.jugador}: {transaccion.cantidad} -{\" \"}\n                {transaccion.destinatario} - {transaccion.concepto}\n              </li>\n            ))}\n      </ul>\n    </Container>\n  )\n}\n\nexport default TransferFrenky\n\nconst Boton = styled(Button)`\n  margin: 10px;\n  padding: 10px;\n  font-size: 16px;\n  border-radius: 5px;\n  background-color: #4caf50;\n  color: #fff;\n  border: none;\n  width: 105px;\n  cursor: pointer;\n  &:hover {\n    background-color: #3e8e41;\n  }\n`\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\nconst Titulo = styled.div`\n  font-size: 30px;\n  font-weight: bold;\n  margin-bottom: 20px;\n`\n","import React, { useState, useEffect } from \"react\"\nimport app from \"../pages/firebase\"\nimport { doc, getDoc } from \"firebase/firestore\"\nimport styled from \"styled-components\"\nimport \"bootstrap/dist/css/bootstrap.css\"\n\nconst obtenerPropiedades = async () => {\n  try {\n    const bancoRef = doc(app, \"jugadores\", \"Jugador3\")\n    const bancoDoc = await getDoc(bancoRef)\n    const propiedades = bancoDoc.data().propiedades\n    console.log(propiedades)\n    return propiedades\n  } catch (error) {\n    console.error(error)\n    return []\n  }\n}\n\nfunction VisorPropsFrenky() {\n  const [propiedades, setPropiedades] = useState([])\n\n  useEffect(() => {\n    obtenerPropiedades().then(propiedades => {\n      setPropiedades(propiedades || [])\n    })\n  }, [])\n\n  return (\n    <Container>\n      <Titulo>Mis Propiedades</Titulo>\n      <Ligas>\n        <table>\n          <thead>\n            <tr>\n              <th style={{ width: \"120px\" }}>Número</th>\n              <th>Nombre de la Propiedad</th>\n            </tr>\n          </thead>\n          <tbody>\n            {propiedades.map((propiedad, index) => (\n              <tr key={index}>\n                <td style={{ textAlign: \"center\" }}>{index + 1}</td>\n                <td style={{ textAlign: \"left\" }}>{propiedad}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </Ligas>\n    </Container>\n  )\n}\n\nexport default VisorPropsFrenky\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-top: 40px;\n`\nconst Titulo = styled.h1`\n  font-size: 25px;\n  font-weight: bold;\n  margin-bottom: 20px;\n`\nconst Ligas = styled.div`\n  display: grid;\n  flex-direction: row dense;\n  grid-column-gap: 10px;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 30px;\n  table th {\n    text-align: center;\n    font-weight: bold;\n  }\n  table td {\n    text-align: center;\n  }\n`\n","import React, { useState, useEffect } from \"react\"\nimport app from \"../pages/firebase\"\nimport {\n  collection,\n  getDocs,\n  doc,\n  getDoc,\n  updateDoc,\n  arrayUnion,\n  arrayRemove,\n} from \"firebase/firestore\"\nimport styled from \"styled-components\"\nimport Dropdown from \"react-bootstrap/Dropdown\"\nimport Button from \"react-bootstrap/Button\"\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport Alert from \"react-bootstrap/Alert\"\n\nconst obtenerJugadores = async () => {\n    try {\n      const jugadoresRef = collection(app, \"jugadores\")\n      const jugadoresDocs = await getDocs(jugadoresRef)\n      const jugadores = jugadoresDocs.docs.map(doc => ({\n        id: doc.id,\n        nombre: doc.data().nombre,\n      }))\n      // Eliminamos a Nicole (Jugador2) de la lista de jugadores\n      const jugadoresFiltrados = jugadores.filter(jugador => jugador.id !== \"Jugador2\")\n      return jugadoresFiltrados\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\nconst obtenerPropiedades = async () => {\n    try {\n      const jugadorRef = doc(app, \"jugadores\", \"Jugador3\")\n      const jugadorDoc = await getDoc(jugadorRef)\n      const propiedades = jugadorDoc.data().propiedades\n      return propiedades\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  const transferirPropiedad = async (\n    jugadorSeleccionado,\n    propiedadSeleccionada,\n    jugadores,\n    setShowAlert,\n    setAlertMessage\n  ) => {\n    try {\n      const emilioRef = doc(app, \"jugadores\", \"Jugador3\")\n      const jugadorRef = doc(app, \"jugadores\", jugadorSeleccionado)\n  \n      // Obtenemos el documento de Emilio\n      const emilioDoc = await getDoc(emilioRef)\n      const emilioData = emilioDoc.data()\n  \n      // Verificamos si la propiedad seleccionada existe en el array de propiedades de Emilio\n      if (emilioData.propiedades.includes(propiedadSeleccionada)) {\n        // Eliminamos la propiedad del array de propiedades de Emilio\n        await updateDoc(emilioRef, {\n          propiedades: arrayRemove(propiedadSeleccionada),\n        })\n  \n        // Obtenemos el documento del jugador seleccionado\n        const jugadorDoc = await getDoc(jugadorRef)\n        const jugadorData = jugadorDoc.data()\n  \n        // Si el campo propiedades no existe en el documento del jugador, lo creamos como un array vacío\n        if (!jugadorData.propiedades) {\n          await updateDoc(jugadorRef, {\n            propiedades: [],\n          })\n        }\n  \n        // Agregamos la propiedad al array de propiedades del jugador seleccionado\n        await updateDoc(jugadorRef, {\n          propiedades: arrayUnion(propiedadSeleccionada),\n        })\n  \n        // Muestra una alerta de éxito\n        setShowAlert(true)\n        setAlertMessage(\n          `Transferencia de ${propiedadSeleccionada} a ${\n            jugadores.find(jugador => jugador.id === jugadorSeleccionado)?.nombre\n          } correcta`\n        )\n  \n        console.log(\n          `Propiedad ${propiedadSeleccionada} transferida a ${jugadorSeleccionado}`\n        )\n      } else {\n        // Muestra una alerta de error\n        setShowAlert(true)\n        setAlertMessage(\"La propiedad seleccionada no existe en el array de Emilio\")\n  \n        console.error(\"La propiedad seleccionada no existe en el array de Emilio\")\n      }\n    } catch (error) {\n      // Muestra una alerta de error\n      setShowAlert(true)\n      setAlertMessage(\"Ocurrió un error durante la transferencia\")\n  \n      console.error(error)\n    }\n  }\n\n  const transferirPropiedadAlBanco = async (\n    propiedadSeleccionada,\n    setShowAlert,\n    setAlertMessage\n  ) => {\n    try {\n      const emilioRef = doc(app, \"jugadores\", \"Jugador3\")\n      const bancoRef = doc(app, \"jugadores\", \"Banco\")\n  \n      // Obtenemos el documento de Emilio\n      const emilioDoc = await getDoc(emilioRef)\n      const emilioData = emilioDoc.data()\n  \n      // Verificamos si la propiedad seleccionada existe en el array de propiedades de Emilio\n      if (emilioData.propiedades.includes(propiedadSeleccionada)) {\n        // Eliminamos la propiedad del array de propiedades de Emilio\n        await updateDoc(emilioRef, {\n          propiedades: arrayRemove(propiedadSeleccionada),\n        })\n  \n        // Obtenemos el documento del Banco\n        const bancoDoc = await getDoc(bancoRef)\n        const bancoData = bancoDoc.data()\n  \n        // Si el campo propiedades no existe en el documento del Banco, lo creamos como un array vacío\n        if (!bancoData.propiedades) {\n          await updateDoc(bancoRef, {\n            propiedades: [],\n          })\n        }\n  \n        // Agregamos la propiedad al array de propiedades del Banco\n        await updateDoc(bancoRef, {\n          propiedades: arrayUnion(propiedadSeleccionada),\n        })\n  \n        // Muestra una alerta de éxito\n        setShowAlert(true)\n        setAlertMessage(`Transferencia de ${propiedadSeleccionada} al Banco correcta`)\n  \n        console.log(`Propiedad ${propiedadSeleccionada} transferida al Banco`)\n      } else {\n        // Muestra una alerta de error\n        setShowAlert(true)\n        setAlertMessage(\"La propiedad seleccionada no existe en el array de Emilio\")\n  \n        console.error(\"La propiedad seleccionada no existe en el array de Emilio\")\n      }\n    } catch (error) {\n      // Muestra una alerta de error\n      setShowAlert(true)\n      setAlertMessage(\"Ocurrió un error durante la transferencia\")\n  \n      console.error(error)\n    }\n  }\n\nfunction TraspasarPropsFrenky() {\n    const [jugadores, setJugadores] = useState([\n        { id: \"Banco\", nombre: \"Banco\" },\n      ])\n  const [propiedades, setPropiedades] = useState([])\n  const [jugadorSeleccionado, setJugadorSeleccionado] = useState(\"Jugador\")\n  const [propiedadSeleccionada, setPropiedadSeleccionada] =\n    useState(\"Propiedades\")\n  const [showAlert, setShowAlert] = useState(false) // Agrega este estado\n  const [alertMessage, setAlertMessage] = useState(\"\")\n\n  useEffect(() => {\n    obtenerJugadores().then(jugadores => setJugadores(jugadores))\n    obtenerPropiedades().then(propiedades => setPropiedades(propiedades))\n  }, [])\n\n  const handleJugadorSeleccionado = jugador => {\n    if (jugador.id === \"Banco\") {\n      setJugadorSeleccionado(\"Banco\")\n    } else {\n      setJugadorSeleccionado(jugador.id)\n    }\n  }\n  const handlePropiedadSeleccionada = propiedad => {\n    setPropiedadSeleccionada(propiedad)\n  }\n\n  return (\n    <Container className=\"text-center\">\n      <h1>Traspasar propiedades</h1>\n      <h4>A que jugador quieres transferir la propiedad:</h4>\n      <DropdownContainer>\n      <Dropdown>\n  <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n    {jugadores.find(jugador => jugador.id === jugadorSeleccionado)\n      ?.nombre || \"Jugador\"}\n  </Dropdown.Toggle>\n  <Dropdown.Menu>\n  {jugadores.map((jugador, index) => (\n    <Dropdown.Item\n      key={index}\n      onClick={() => handleJugadorSeleccionado(jugador)}\n    >\n      {jugador.id === \"Banco\" ? \"Banco\" : jugador.nombre}\n    </Dropdown.Item>\n  ))}\n</Dropdown.Menu>\n</Dropdown>\n\n        <Dropdown>\n          <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n            {propiedadSeleccionada}\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            {propiedades.map((propiedad, index) => (\n              <Dropdown.Item\n                key={index}\n                onClick={() => handlePropiedadSeleccionada(propiedad)}\n              >\n                {propiedad}\n              </Dropdown.Item>\n            ))}\n          </Dropdown.Menu>\n        </Dropdown>\n      </DropdownContainer>\n      <Button\n  onClick={() => {\n    if (jugadorSeleccionado === \"Banco\") {\n      transferirPropiedadAlBanco(\n        propiedadSeleccionada,\n        setShowAlert,\n        setAlertMessage\n      )\n    } else {\n      transferirPropiedad(\n        jugadorSeleccionado,\n        propiedadSeleccionada,\n        jugadores,\n        setShowAlert,\n        setAlertMessage\n      )\n    }\n  }}\n>\n  Transferir\n</Button>\n      {showAlert && (\n        <>\n          <Overlay />\n          <AlertContainer>\n            <Alert\n              variant=\"success\"\n              onClose={() => setShowAlert(false)}\n              dismissible\n            >\n              <Alert.Heading>Transferencia exitosa</Alert.Heading>\n              <p>{alertMessage}</p>\n            </Alert>\n          </AlertContainer>\n        </>\n      )}\n    </Container>\n  )\n}\n\nexport default TraspasarPropsFrenky\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\nconst DropdownContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 350px; /* ajusta el ancho según tus necesidades */\n  margin: 15px;\n`\nconst Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: 999;\n`\n\nconst AlertContainer = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 1000;\n`\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Layout from \"../components/layout/layout\"\nimport Seo from \"../components/layout/seo\"\nimport styled from \"styled-components\"\nimport { collection, query, onSnapshot } from \"firebase/firestore\"\nimport { useEffect, useState } from \"react\"\nimport app from \"../pages/firebase\"\nimport TransferFrenky from \"../components/transferFrenky\"\nimport VisorPropsFrenky from \"../components/propiedadesFrenky\"\nimport TraspasarPropsFrenky from \"../components/transPropsFrenky\"\nimport Boton from \"../components/Boton\";\n\nfunction JugadorTres() {\n  const [mostrarPropiedades, setMostrarPropiedades] = useState(false)\n  const [data, setData] = useState([])\n  const [loader, setloader] = useState(true)\n\n  const jugadoresRef = collection(app, \"jugadores\")\n  const q = query(jugadoresRef)\n\n  function getData() {\n    onSnapshot(q, querySnapshot => {\n      const items = []\n      querySnapshot.forEach(doc => {\n        items.push(doc.data())\n      })\n      setData(items)\n      setloader(false)\n    })\n  }\n\n  useEffect(() => {\n    getData()\n  }, [])\n\n  const tercerJugador = data.length > 0 ? data[3] : null\n\n  const handleBoton = () => {\n    setMostrarPropiedades(!mostrarPropiedades)\n  }\n\n  return (\n    <Layout>\n      <Seo title=\"Frenky\" />\n      <Container>\n        {tercerJugador && (\n          <>\n            <Nombre>{tercerJugador.nombre}</Nombre>\n            <Saldo>{tercerJugador.saldo}</Saldo>\n            <Boton onClick={handleBoton} mostrarPropiedades={mostrarPropiedades} />\n  \n            {mostrarPropiedades ? (\n              <>\n                <TraspasarPropsFrenky />\n                <VisorPropsFrenky />\n              </>\n            ) : (\n              <TransferFrenky />\n            )}\n  \n            <Link to=\"/\">Go back to the homepage</Link>\n          </>\n        )}\n      </Container>\n    </Layout>\n  );\n}\n\nexport default JugadorTres\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-top: 100px;\n`\nconst Nombre = styled.div`\n  font-size: 34px;\n  font-weight: bold;\n`\nconst Saldo = styled.div`\n  font-size: 24px;\n`"],"names":["BotonEstilizado","styled","button","_ref","onClick","mostrarPropiedades","React","actualizarSaldoJugador","async","jugadorId","cantidad","jugadorRef","doc","app","updateDoc","saldo","increment","console","log","error","TransferFrenky","jugadores","setJugadores","useState","setCantidad","historial","setHistorial","saldoJugador1","setSaldoJugador1","saldoJugador2","setSaldoJugador2","saldoJugador3","setSaldoJugador3","saldoJugador4","setSaldoJugador4","concepto","setConcepto","transacciones","setTransacciones","useEffect","jugadoresRef","collection","getDocs","docs","map","id","data","obtenerJugadores","then","forEach","jugador","obtenerTransacciones","jugador1Ref","onSnapshot","jugador2Ref","jugador3Ref","jugador4Ref","agregarTransaccion","destinatario","historialRef","nuevaTransaccion","timestamp","Date","toISOString","arrayUnion","historialDoc","getDoc","filter","transaccion","handleActualizarSaldo","nombreJugador","concat","_toConsumableArray","toLocaleString","Container","Titulo","InputGroup","className","Text","Form","Control","type","value","toString","onChange","event","parseInt","target","e","style","display","justifyContent","Boton","variant","handleBanco","sort","a","b","slice","index","key","toLocaleTimeString","hour","minute","Button","div","propiedades","setPropiedades","bancoRef","obtenerPropiedades","Ligas","width","propiedad","textAlign","h1","_jugadores$find2","nombre","jugadorSeleccionado","setJugadorSeleccionado","propiedadSeleccionada","setPropiedadSeleccionada","showAlert","setShowAlert","alertMessage","setAlertMessage","DropdownContainer","Dropdown","Toggle","find","Menu","Item","handleJugadorSeleccionado","handlePropiedadSeleccionada","emilioRef","includes","arrayRemove","transferirPropiedadAlBanco","_jugadores$find","transferirPropiedad","Overlay","AlertContainer","Alert","onClose","dismissible","Heading","setMostrarPropiedades","setData","loader","setloader","q","query","querySnapshot","items","push","tercerJugador","length","Layout","Seo","title","Nombre","Saldo","handleBoton","TraspasarPropsFrenky","VisorPropsFrenky","Link","to"],"sourceRoot":""}